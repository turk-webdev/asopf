version: "3.8"

services:
    nodejs:
        build:
            context: .
        image: asopf    # the image created from the dockerfile 
        container_name: app-dev
        restart: unless-stopped
        command: npm run dev    # replacing prod config with dev
        volumes:
            - ./:/app
        networks:
            - frontend
            - backend
    
    db:
        image: mysql:8.0.21
        container_name: db-dev
        restart: unless-stopped
        environment:    # environment variables are defined in .env, look at .env.example for reference
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        ports:
            - 3307:3306     # expose mysql port to host machine so mysql workbench can connect
        volumes:
            - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        networks:
            - backend

    nginx:
        image: nginx:1.19.2
        container_name: nginx-dev
        restart: unless-stopped
        ports:
            - "8080:80"     # map localhost:8080 to port 80 of the internal network
        volumes:
            - ./:/app
            - ./nginx-conf:/etc/nginx/conf.d
        depends_on:
            - nodejs
        networks:
            - frontend
volumes:    # define that there are configurations with custom namings
    mysql:
networks:
    frontend:
    backend: